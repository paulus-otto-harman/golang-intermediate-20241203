{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a Swagger API.",
        "title": "Voucher API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Paulus Otto Harman",
            "url": "https://academy.lumoshive.com/contact-us",
            "email": "lumoshive.academy@gmail.com"
        },
        "license": {
            "name": "Lumoshive Academy",
            "url": "https://academy.lumoshive.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/admin/vouchers": {
            "get": {
                "security": [
                    {
                        "token": []
                    },
                    {
                        "ID-KEY": []
                    }
                ],
                "description": "List of voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vouchers"
                ],
                "summary": "list of vouchers",
                "responses": {
                    "200": {
                        "description": "list of vouchers",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "add voucher",
                "responses": {
                    "200": {
                        "description": "voucher added",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/admin/vouchers/:voucher_id": {
            "put": {
                "description": "update a voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "update a voucher",
                "responses": {
                    "200": {
                        "description": "successfully update voucher",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Vouchers"
                ],
                "summary": "delete a voucher",
                "responses": {
                    "200": {
                        "description": "successfully update voucher",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "authenticate user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Admin login",
                "parameters": [
                    {
                        "description": " ",
                        "name": "domain.User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/domain.HTTPResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.HTTPResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "description": {
                    "type": "string"
                },
                "error_code": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        }
    },
    "securityDefinitions": {
        "ID-KEY": {
            "type": "apiKey",
            "name": "ID-KEY",
            "in": "header"
        },
        "token": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}